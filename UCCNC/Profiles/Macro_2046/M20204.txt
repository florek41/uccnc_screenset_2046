// Macros for use the ATC by Hugo Neil
// Revision 2.1  - Oct-21 - Hugo Neil
// Added fixeed TLS position
string ifai=AS3.Getfield(27242);double move=Convert.ToDouble(ifai);if(move==55){if(!exec.GetLED(56)||!exec.GetLED(57)||!exec.GetLED(58))
{
MessageBox.Show("The machine has not yet been homed, HOME before executing!");
exec.Stop();
return;
}
double Zoriginalpos = exec.GetZmachpos();
double Zmin = -150; //Max.Z depth
double FeedrateFast = 400; //Feedrate for probing
double FeedrateSlow = 40; //Feedrate for probing
double Retractheight = 30; //The retract height
double Retractforsecondmeasurement = 2; 
double[] ZabsoluteT = new double[30];
double[] ZdisT = new double[30];
double CurrentTool = 0;
int Numbertoolsint = 1; 
int Singletoolsint = 1;
double FixedTLS = 0;         // Set to 1 if the fixed TLS is present, 0 if the standard TLS is used
double TLSXcoord = 0;   // set to zero if the fixed TLS is not present or use the X machine coordinate for the TLS position
double TLSYcoord = 0;   // set to zero if the fixed TLS is not present or use the Y machine coordinate for the TLS position
double Ytooloffset = -50;   // Fixed TLS value - Use -50 if the in-bed rack is on the back of the machine - Use 50 if the in-bed rack is on the front of the machine
ZdisT[1] = 0;
AS3.Setfield(ZdisT[1], 196); 
AS3.Validatefield(196);
exec.Wait(100);

if (!AS3.Getcheckboxstate(600))
{
DialogResult result;
result = MessageBox.Show("This macro will automatically adjust the tool offsets for the ATC, for a single or multiple tools. The recomended position of the tool length sensor is in front and left of the tool holder. To allow a clear movement of the ATC, position the tool on top of the tool length sensor and press OK to continue. This macro will overwrite your current offsets.", "Important!" , MessageBoxButtons.OKCancel);
if (result == System.Windows.Forms.DialogResult.Cancel)
{
MessageBox.Show("Correct the positions and execute the macro again");
exec.Stop();
return;
}
}

double Numbertools = exec.Question("How many tools are on the ATC? Enter 1 to adjust a single tool.");
if(Numbertools<=0)
{
MessageBox.Show("Verify the number of tools (minimum 1, maximum 30).");
exec.Stop();
return;
}
if(Numbertools==1)
{
double Singletool = exec.Question("Which tool number do you want to adjust the offset of?");
if(Singletool<=0)
{
MessageBox.Show("Verify the number of the tool you want to change.");
exec.Stop();
return;
}
if(Singletool==1)
{
MessageBox.Show("You can't adjust the value of the tool 1. Tool 1 is used as reference for every other tool on the magazine.");
exec.Stop();
return;
}
if(Singletool>=31)
{
MessageBox.Show("This Macro only works with 30 tools!");
exec.Stop();
return;
}
if(Singletool>=2)
{
if(FixedTLS==1)
{
exec.Code("G00 G53 Z -2");
while(exec.IsMoving()){}
exec.Code("G00 G53 Y " + (TLSYcoord + Ytooloffset));
while(exec.IsMoving()){}
exec.Code("G00 G53 X " + TLSXcoord);
while(exec.IsMoving()){}
exec.Code("G00 G53 Y " + TLSYcoord);
while(exec.IsMoving()){}
}
Singletoolsint = Convert.ToInt32(Singletool); 
if(!exec.Ismacrostopped())
{
exec.Code("M6T1");
while(exec.IsMoving()){}
}
exec.Code("G31 Z" + Zmin + "F" + FeedrateFast); 		// Do the Z probing with Fast feedrate first
while(exec.IsMoving()){}
exec.Code("G91 G0 Z" + Retractforsecondmeasurement);
while(exec.IsMoving()){}
exec.Code("G90");
while(exec.IsMoving()){} 
exec.Code("G31 Z" + Zmin + "F" + FeedrateSlow); 		// Do the Z probing again with Slow Feedrate to get a more accurate reading
while(exec.IsMoving()){}
ZabsoluteT[1] = exec.GetZmachpos();
exec.Code("G91 G0 Z" + Retractforsecondmeasurement);	//Retract the axis 
while(exec.IsMoving()){}
// MessageBox.Show("Tool 1 height " + ZabsoluteT[1]);
if(!exec.Ismacrostopped())
{
exec.Code("M6T"+Singletool);
while(exec.IsMoving()){}
}
exec.Code("G31 Z" + Zmin + "F" + FeedrateFast); 		// Do the Z probing with Fast feedrate first
while(exec.IsMoving()){}
exec.Code("G91 G0 Z" + Retractforsecondmeasurement);
while(exec.IsMoving()){}
exec.Code("G90");
while(exec.IsMoving()){}  
exec.Code("G31 Z" + Zmin + "F" + FeedrateSlow); 		// Do the Z probing again with Slow Feedrate to get a more accurate reading
while(exec.IsMoving()){}
ZabsoluteT[Singletoolsint] = exec.GetZmachpos();
exec.Code("G91 G0 Z" + Retractforsecondmeasurement);	//Retract the axis 
while(exec.IsMoving()){}
ZdisT[Singletoolsint]=(ZabsoluteT[1]-ZabsoluteT[Singletoolsint])*(-1);
AS3.Setfield(ZdisT[Singletoolsint], (195+Singletoolsint)); 
AS3.Validatefield(195+Singletoolsint);
exec.Wait(100);
exec.Code("G43 H"+Singletool);
exec.Wait(100);
}
}
if(Numbertools>=30)
{
MessageBox.Show("This Macro only works with 30 tools!");
exec.Stop();
return;
}
if(Numbertools>1)
{
DialogResult result2;
result2 = MessageBox.Show("The macro will adjust the offsets for " + Numbertools + " tools (this will not change the workpiece zero value). Do you want to continue?", "Important!" , MessageBoxButtons.OKCancel);
if (result2 == System.Windows.Forms.DialogResult.Cancel)
{
MessageBox.Show("Correct the positions and execute the macro again");
exec.Stop();
return;
}
}
if(Numbertools>=2)
{
if(FixedTLS==1)
{
exec.Code("G00 G53 Z -2");
while(exec.IsMoving()){}
exec.Code("G00 G53 Y " + (TLSYcoord + Ytooloffset));
while(exec.IsMoving()){}
exec.Code("G00 G53 X " + TLSXcoord);
while(exec.IsMoving()){}
exec.Code("G00 G53 Y " + TLSYcoord);
while(exec.IsMoving()){}
}
CurrentTool=1;
if(!exec.Ismacrostopped())
{
exec.Code("M6T"+CurrentTool);
while(exec.IsMoving()){}
}
exec.Code("G31 Z" + Zmin + "F" + FeedrateFast); 		// Do the Z probing with Fast feedrate first
while(exec.IsMoving()){}
exec.Code("G91 G0 Z" + Retractforsecondmeasurement);
while(exec.IsMoving()){}
exec.Code("G90");
while(exec.IsMoving()){} 
exec.Code("G31 Z" + Zmin + "F" + FeedrateSlow); 		// Do the Z probing again with Slow Feedrate to get a more accurate reading
while(exec.IsMoving()){}
ZabsoluteT[1] = exec.GetZmachpos();
exec.Code("G91 G0 Z" + Retractforsecondmeasurement);	//Retract the axis 
CurrentTool=CurrentTool+1;
Numbertoolsint=Numbertoolsint+1;
while(exec.IsMoving()){}
// MessageBox.Show("Tool 1 height " + ZabsoluteT[1]);
while(CurrentTool<=Numbertools){
if(!exec.Ismacrostopped())
{
exec.Code("M6T"+CurrentTool);
while(exec.IsMoving()){}
}
exec.Code("G31 Z" + Zmin + "F" + FeedrateFast); 		// Do the Z probing with Fast feedrate first
while(exec.IsMoving()){}
exec.Code("G91 G0 Z" + Retractforsecondmeasurement);
while(exec.IsMoving()){}
exec.Code("G90");
while(exec.IsMoving()){}  
exec.Code("G31 Z" + Zmin + "F" + FeedrateSlow); 		// Do the Z probing again with Slow Feedrate to get a more accurate reading
while(exec.IsMoving()){}
ZabsoluteT[Numbertoolsint] = exec.GetZmachpos();
exec.Code("G91 G0 Z" + Retractforsecondmeasurement);	//Retract the axis 
while(exec.IsMoving()){}
// MessageBox.Show("Tool "+CurrentTool+" height " + ZabsoluteT[Numbertoolsint]);
ZdisT[Numbertoolsint]=(ZabsoluteT[1]-ZabsoluteT[Numbertoolsint])*(-1);
// MessageBox.Show("Tool offset " + ZdisT[Numbertoolsint]);
AS3.Setfield(ZdisT[Numbertoolsint], (195+Numbertoolsint)); 
AS3.Validatefield(195+Numbertoolsint);
CurrentTool = CurrentTool+1;
Numbertoolsint=Numbertoolsint+1;
exec.Wait(100);
exec.Code("G43 H"+CurrentTool);
exec.Wait(100);
}
}
if(!exec.Ismacrostopped())
{
DialogResult result3;
result3 = MessageBox.Show(Numbertools + " tool(s) offsets have been calculated. Do you want to save these offsets in the current profile? If you click Cancel the offsets are only applied but will be lost after closing UCCNC.", "Important!" , MessageBoxButtons.OKCancel);
if (result3 == System.Windows.Forms.DialogResult.Cancel)
{
exec.Callbutton(168);
exec.Wait(200); 
MessageBox.Show("Settings are only applied temporarily. Returning to tool #1");
exec.Code("M6T1");
while(exec.IsMoving()){}
exec.Stop();
return;
}
else
{
exec.Callbutton(168);
exec.Callbutton(167);
exec.Wait(200); 
MessageBox.Show("Settings are applied and saved in the current profile. Returning to tool #1");
exec.Code("M6T1");
while(exec.IsMoving()){}
exec.Stop();
return;
}

}
else
{
exec.StopWithDeccel();
exec.Wait(200); 
Console.Beep();
exec.AddStatusmessage("Macro interrupted by user!");
}
}