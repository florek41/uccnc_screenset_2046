// 4th axis zero side measure
// V1.1 - Oct-21 - Hugo Neil
string ifai=AS3.Getfield(27242);double move=Convert.ToDouble(ifai);if(move==55){if(!exec.GetLED(56)||!exec.GetLED(57)||!exec.GetLED(58))
{
MessageBox.Show("The machine has not yet been homed, HOME before executing!");
exec.Stop();
return;
}
while(exec.IsMoving()){}

if (!AS3.Getcheckboxstate(600))
{
DialogResult result;
result = MessageBox.Show("This macro finds the center of the 4th axis chuck.  Place your tool length sensor on the right hand side of your 4th axis. The axis must be positioned to the right hand side of the 4th axis. The X axis will drive from right to left until your endmill triggers the tool length sensor. After triggering, the axis will retreat to the starting position. Do not use GOTO ZERO after probing!", "Important!" , MessageBoxButtons.OKCancel);
if (result == System.Windows.Forms.DialogResult.Cancel)
{
MessageBox.Show("Execute the macro again");
exec.Stop();
return;
}
}
double diameter = exec.Question("What is the diameter of your endmill (mm)?");
exec.Wait(200); 
exec.Wait(200); 
double axismovpositive = 100; 		//Max Axis + Movement
double axismovnegative = -100; 		//Max Axis - Movement
double Feedrate = 250; 				//Feedrate for probing
double FastFeedrate = 1500;			//Feedrate for moving the probe
double newvalzero = 39.21+35.16+(diameter/2); 	//Tool Lenght sensor height value (see M31) + Distance to the center of 4th axis (35.16)
double Xorigin = exec.GetXmachpos();

// Start probing X Axis
exec.Code("G31 X" + axismovnegative + "F" + Feedrate); 		//Start probing
while(exec.IsMoving()){}									//Wait while there is motion 
exec.Wait(200);  											//Safety wait for the UC100 syncronisation 
exec.ChangeaxisDROvalue(0, newvalzero.ToString()); 			//Change the DRO value 
exec.Wait(200);  											//Safety wait for the UC100 syncronisation
exec.Code("G01 G53 X" + Xorigin + "F" + FastFeedrate);		//Retract the axis 
while(exec.IsMoving()){} 									//Wait while there is motion 

if(!exec.Ismacrostopped())
{
exec.Wait(200); 
}
else
{
exec.StopWithDeccel();
exec.Wait(200); 
Console.Beep();
exec.AddStatusmessage("Macro interrupted by user!");
}
}